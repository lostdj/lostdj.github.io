<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<style type="text/css">
		/* https://bestmotherfucking.website */
		body{margin:1em auto;max-width:40em;padding:0 .62em;font:1.2em/1.62em sans-serif;}h1,h2,h3{line-height:1.2em;}

		/* https://ziglang.org */
		@media (prefers-color-scheme: dark)
		{
			body{background-color:#111;color: #bbb;}
			a{color: #88f;}
			h1 a, h2 a, h3 a, h4 a, h5 a{color: #aaa;}
		}
	</style>
	<title>Surprise Inherent Diversity</title>
</head>

<body>
	<h1>Surprise Inherent Diversity</h1>

	<p><i>Can't force yourself to keep your back straight? It's a symptom, address the other part of your body first.</i></p>

	<p><i>Making peace > searching for truth.</i></p>

	<p>The lost art of X: a recurring theme among many, or probably all of the craftsmanship. Someone on reddit says:</p>

	<a href="https://old.reddit.com/r/programming/comments/bq1dt6/jonathan_blow_preventing_the_collapse_of/eo2b3da">old.reddit.com/r/programming/comments/bq1dt6/jonathan_blow_preventing_the_collapse_of/eo2b3da</a>

	<blockquote>There are components of the moon shot that we don't know how to make anymore. A specific example: at one point either NASA or Boeing (I forget which) had to go cut a sample out of a heat shield at the air and space museum and reverse engineer the materials and construction because they had lost the records of how it was manufactured in the first place.</blockquote>

	<p>Whether it is in fact true or not, it's not hard to imagine that it is. Something like that probably happened to you, digging in your own old work.</p>

	<p>Jonathan Blow had a talk about this:</p>

	<a href="https://www.youtube.com/watch?v=pW-SOdj4Kkk">youtube.com/watch?v=pW-SOdj4Kkk:<br/>Jonathan Blow - Preventing the Collapse of Civilization</a>
	<iframe width="560" height="315" src="https://www.youtube.com/embed/pW-SOdj4Kkk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

	<p>And recently had another take on Twitter about the state of the art that are computers:</p>

	<a href="https://threadreaderapp.com/thread/1154442285494329344.html">threadreaderapp.com/thread/1154442285494329344.html</a>

	<blockquote>
		<p>Only a tiny minority of professional programmers have a clear picture in their minds of how fast modern computers are. 99.9% have next to no idea. How does this affect software that is even conceived? (Ignoring, for a moment, what is actually built, which we know is very slow).</p>
		<p>How big of a problem is it that we have this crucial craft, on which we are knowingly staking the future, and almost none of its practitioners understand the fundamental tool they are using?</p>
		<p>(For the record, I don’t place myself in the top tier re understanding of speed or anything else. I am somewhere in the middle of that gradient between the 99.9% and the People Who Really Know.)</p>
		<p>We see all this bad rhetoric claiming “system X is only 2x slower than native code therefore it’s fast”... but one must ignore rationalizations and look at the actual output, which is several orders of magnitude inefficient. Few people are willing to put 2 and 2 together here.</p>
		<p>The most common objection to these points is "we write slow software because it lets us make things faster and more easily". I agree this is the common belief, but it's wrong. If development is so much easier, why is productivity approaching 0 over time?</p>
		<p>Replies seem to be rat-holing on the old well-understood concept that software is slow. Yeah, we know, I have said that many times (and said to ignore that this time). What I am highlighting here is a deeper issue: programmers don't really know what computers are any more.</p>
		<p>Speed is one dimension of understanding that's lacking; the picture of speed in programmers' heads is 2-4 orders of magnitude too slow. It's easy to see and understand this, which is why I brought it up. But it's not the only dimension of missing understanding.</p>
		<p>To make the speed point again, for an attempt at clarity: Programmers have a picture of their computer, in their minds, that they use to figure out what to do. For 99.9%+, that picture is inaccurate: the imagined computer is 100x-1000x slower than the real computer.</p>
		<p>This will result in software that's too slow, obviously. But it also affects what one thinks is possible, what one dares to imagine to do. That is the more important part. Humans are very example-based, and if our examples are wrong, where they lead us will be wrong too.</p>
	</blockquote>

	<p>To which someone else on reddit replies:</p>

	<a href="https://old.reddit.com/r/programming/comments/chw76u/jonathan_blow_only_a_tiny_minority_of">old.reddit.com/r/programming/comments/chw76u/jonathan_blow_only_a_tiny_minority_of</a>

	<blockquote>
		<blockquote>The most common objection to these points is "we write slow software because it lets us make things faster and more easily". I agree this is the common belief, but it's wrong. If development is so much easier, why is productivity approaching 0 over time?</blockquote>
		<p>This is like saying that since cars don't instantly get me to my destination I should travel everywhere on foot. Sure cars aren't perfect, but they are still much faster than the alternative.</p>
		<p>This is really shitty logic.</p>

		<blockquote>This will result in software that's too slow, obviously. But it also affects what one thinks is possible, what one dares to imagine to do. That is the more important part. Humans are very example-based, and if our examples are wrong, where they lead us will be wrong too.</blockquote>
		<p>Why is it that program speed creates possibilities when development speed doesn't? He of all people should know that you don't have infinite time to develop something, and even if a program is good, if it takes too long to develop then it's not going to get built. He said as much when talking about Rust when he said he couldn't use it for game development since it introduced too much friction.</p>
		<p>I agree with him. Computers aren't being used to their full potential, but if you want to fix that, the problems go much deeper than "gitting gud".</p>
	</blockquote></p>

	<p>This isn't a new view, there are similar ones in the Twitter thread, and countless ones before in various related discussions.</p>

	<p>Both sides don't touch on nuances (there are whole books written about it); neither are wrong, though. Simply admitting this would make a lot of arguing on the internet just vanish. Unfortunately, often this isn't what participants of the discussion are after.</p>

	<p>But this piece will go somewhere else. Let's git gud!</p>

	<h2>Surprise</h2>

	<p>You don't get to the Moon by downloading another dependency for your flight control software. This isn't surprising to anyone.</p>

	<p>You have to think and write it by yourself. Obvious and in no way surprising, still.</p>

	<p>Is it really obvious, though? Because it can go surprisingly wrong:</p>

	<a href="https://twitter.com/james_hilliard/status/1084222874515210240">twitter.com/james_hilliard/status/1084222874515210240</a>

	<blockquote>On the other hand updating packages like OpenSSL without updating the application using it can also be dangerous, for example <a href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007097.html">https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-January/007097.html</a> could have caused a major consensus failure in Bitcoin. Bitcoin Core statically links OpenSSL for that reason.</blockquote>

	<p>Something akin to that also might've happened to you. You've fixed and forgot all about it, not taking a note how it may repeat again, thinking only how computers suck.</p>

	<p>Do you pay enough attention to things? Are you actually thinking as much as you think you do, before feeling tired, annoyed, or what have you?</p>

	<p>This is the Surprise part, albeit the simplest of the three.</p>

	<p>All you really have is yourself, and only yourself. There is no app for this. You can never really depend on anyone, or anything else. Your own mind is your biggest strength, not the computers that we are striving to make do things for us.</p>

	<p>You still have to think about what to ask the computer to do. Then you you have to program it to do it.</p>

	<p>Did you want it to get you the result from the first try, without crashing, and fast? Why not to think about how to get there, instead of wasting time and money on figuring out why it didn't, post-mortem afterwards? How much faster did you really put out your product on the market? How much did you save from maintaining the resulting mess?</p>

	<p>No matter what anyone says is right, no matter what is the latest hot take at something, think for yourself, first. You are already doing it, and always did. The surprise is in realizing you've had it all all along. Take it to the next level, for we are capable of much more. As it is our...</p>

	<h2>Inherent</h2>

	<p>It's inherent to us. So much in fact, that overthinking, or paying too much attention to something that doesn't deserve it, leads to depression, malaise, procrastination. In the end feeling completely lost, not knowing what to do. You may want to start thinking again, but it just isn't happening. Or maybe your brain is so excited about everything, that it's indistinguishable from perceiving this as suffering.</p>

	<p>But take this as a proof that this is who we are and turn it around: you are not someone who is just following behind the thinkers, you are one.</p>

	<p>And as you can imagine, aforementioned thinkers didn't get to the place they are at by overthinking — you've got to work on how to think.</p>

	<p>How about this:</p>

	<a href="https://www.youtube.com/watch?v=LIb3L4vKZ7U">youtube.com/watch?v=LIb3L4vKZ7U:<br/>CppCon 2015: Andrei Alexandrescu “std::allocator...”</a>
	<iframe width="560" height="315" src="https://www.youtube.com/embed/LIb3L4vKZ7U" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

	<p>Sometimes you actually don't need to get all smart. Or rather, this is the state that you want to be in all the time. Just start pulling the thread and pay attention.</p>

	<p>This is how I've arrived at the title (one word-subject by one), first, and then the contents of this writing. It was right before me and I let it flow. It started from seeing that the pursuit of making the computer do things for me leads to the opposite direction, as We Are Not There Yet; and how it doesn't bring any peace and satisfaction of solving yet another problem on the path of reaching an infinite flexibility for everything — turns out, that path is also without end. So what do you do? At some point you'll stumble upon question without a (real) answer (<a href="https://www.youtube.com/watch?v=MO0r930Sn_8">youtube.com/watch?v=MO0r930Sn_8: Richard Feynman - why it can be hard to answer “why magnets repel each other?”</a>), where you have to recognize it as such. For now, there needs to be a line. And when things get simpler, all of the sudden it actually starts to do stuff I've wanted from it.</p>

	<p>Overthinking is a huge problem in our business. It leads to complication, which results in a myriad of problems. Wanting to use anything and everything under the Sun is what newbie programmers do; or how you play a video game, but this isn't how you make one, as it will be completely unplayable.</p>

	<p>Stop thinking and start paying attention.</p>

	<h2>Diversity</h2>

	<p>Where would we be without you and the ones before you? Before we started to think, this was — and still is — what is inherent to the nature: diversity. And we are the product of the nature. We are the nature.</p>

	<p>The thinkers and creators you admire did not went on copying their own subjects of admiration. Neither your own path can't be copied from them. It's not a guide to follow 1:1, nor it's a ruleset set in stone.</p>

	<p>To push anything anywhere, we have to break through the bounds. If you're not doing it, it's a yet another missed opportunity for both yourself, and everyone now and in the future.</p>

	<p>To break through the bounds, you can't stay content with a groupthink. Whether it's an ideology of sorts, or even thinking "It's just too hard, I can't possibly know and keep in mind all of that". You can. Because this isn't you, not the one that can't, but the one that thinks so. Or caught up in a theme running among your peers.</p>

	<h2>...</h2>

	<p>This isn't to say that we don't need to make it easier, exactly the opposite. Though we won't get there if we don't start to think harder, and to think what we are thinking about, when not to think, and when think differently.</p>

	<hr/>

	<p>August 2019, <a href="https://asd.im">asd.im</a></p>
</body>
</html>
